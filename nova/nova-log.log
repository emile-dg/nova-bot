2020-06-09 00:26:36,260 - werkzeug - INFO -  * Restarting with stat
2020-06-09 00:27:06,225 - werkzeug - WARNING -  * Debugger is active!
2020-06-09 00:27:06,282 - werkzeug - INFO -  * Debugger PIN: 124-403-253
2020-06-09 00:27:06,513 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:06,514 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:06,945 - werkzeug - INFO -  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2020-06-09 00:27:10,750 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:10,751 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:11,981 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:11,982 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:16,645 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:16,645 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:18,364 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:18,365 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:23,906 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:23,906 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:26,390 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:26,391 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:29,919 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:29,919 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:33,520 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:33,521 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:38,798 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:38,799 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:44,105 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:44,106 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:51,919 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:51,919 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:55,720 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2020 00:27:55] "[37mGET / HTTP/1.1[0m" 200 -
2020-06-09 00:27:59,741 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:27:59,742 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:03,963 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:03,963 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:15,646 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:15,646 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:18,996 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2020 00:28:18] "[37mOPTIONS /reply?m=hey HTTP/1.1[0m" 200 -
2020-06-09 00:28:19,184 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2020 00:28:19] "[37mGET /reply?m=hey HTTP/1.1[0m" 200 -
2020-06-09 00:28:19,872 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:19,872 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:31,703 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2020 00:28:31] "[37mOPTIONS /reply?m=locate%20shops%20in%20Douala HTTP/1.1[0m" 200 -
2020-06-09 00:28:31,806 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2020 00:28:31] "[37mGET /reply?m=locate%20shops%20in%20Douala HTTP/1.1[0m" 200 -
2020-06-09 00:28:37,324 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:28:37,324 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:29:03,208 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:29:03,209 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:29:41,945 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:29:41,946 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:29:46,114 - telegram.ext.updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2020-06-09 00:29:46,114 - telegram.ext.dispatcher - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 380, in _network_loop_retry
    if not action_cb():
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\ext\updater.py", line 341, in polling_action_cb
    allowed_updates=allowed_updates)
  File "<decorator-gen-31>", line 2, in get_updates
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 70, in decorator
    result = func(*args, **kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\bot.py", line 2136, in get_updates
    result = self._request.post(url, data, timeout=float(read_latency) + float(timeout))
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 334, in post
    **urlopen_kwargs)
  File "C:\Users\Emile DJIDA G\Miniconda3\envs\becca\lib\site-packages\telegram\utils\request.py", line 249, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
